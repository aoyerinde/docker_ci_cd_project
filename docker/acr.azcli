# Params
rg_name=data-platform-prod-rg
acr_name=acrdataplatformkg
docker_image=airflow-dataplatform
docker_image_tag=acrdataplatformkg.azurecr.io/airflow-dataplatform:v1
service_principal=sp-acrdataplatform

# Login to Azure
az login

# Create and log in to Azure Container Registry in our resource group
az acr create -g $rg_name -n $acr_name --sku Basic
az acr login -n $acr_name

# Build the Docker image from Dockerfile. Run this inside the Airflow repo folder
docker build -t $docker_image /docker

# Tag and push the Docker image to ACR
docker tag $docker_image $docker_image_tag
docker push $docker_image_tag

# Verify the image is in ACR
az acr repository list -n $acr_name --output table

# Get ACR ID
acr_registry_id=$(az acr show --name $acr_name --query id --output tsv)

# Create the service principal with rights to pull from registry.
sp_passwd=$(az ad sp create-for-rbac --name http://$service_principal --scopes $acr_registry_id --role acrpull --query password --output tsv)
sp_app_id=$(az ad sp show --id http://$service_principal --query appId --output tsv)

# Output the service principal's credentials to be used by Gitlab runners for authentication
echo "Service principal ID: $sp_app_id"
echo "Service principal password: $sp_passwd"

# Check if login works
docker login acrdataplatformkg.azurecr.io --username $sp_app_id --password $sp_passwd

# Base64 encode credentials
echo -n "$sp_app_id:$sp_passwd" | base64

# Put in JSON var and add to Gitlab Settings CI/CD variable as DOCKER_AUTH_CONFIG
{
    "auths": {
        "acrdataplatformkg.azurecr.io": {
            "auth": "(Base64 content from above)"
        }
    }
}